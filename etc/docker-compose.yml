################################################################################
#                                                                              #
#    Copyright (C) 2018-2018 52Â°North Initiative for Geospatial Open Source    #
#    Software GmbH                                                             #
#                                                                              #
#    This program is free software; you can redistribute it and/or modify it   #
#    under the terms of the GNU General Public License version 2 as published  #
#    by the Free Software Foundation.                                          #
#                                                                              #
#    If the program is linked with libraries which are licensed under one of   #
#    the following licenses, the combination of the program with the linked    #
#    library is not considered a "derivative work" of the program:             #
#                                                                              #
#        - Apache License, version 2.0                                         #
#        - Apache Software License, version 1.0                                #
#        - GNU Lesser General Public License, version 3                        #
#        - Mozilla Public License, versions 1.0, 1.1 and 2.0                   #
#        - Common Development and Distribution License (CDDL), version 1.0     #
#                                                                              #
#    Therefore the distribution of the program linked with libraries licensed  #
#    under the aforementioned licenses, is permitted by the copyright holders  #
#    if the distribution is compliant with both the GNU General Public         #
#    License version 2 and the aforementioned licenses.                        #
#                                                                              #
#    This program is distributed in the hope that it will be useful, but       #
#    WITHOUT ANY WARRANTY; without even the implied warranty of                #
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General  #
#    Public License for more details.                                          #
#                                                                              #
################################################################################
#                                                                              #
#                                                                              #
#   Before starting:                                                           #
#     - update all volumne path starting with ADJUST_ME to match               #
#       your local set-up                                                      #
#     - requies environment where PWD is supported (git bash under             #
#       windows).                                                              #
#                                                                              #
#   Start via PROJECT_ROOT:$ docker-compose --file etc/docker-compose.yml up   #
#                                                                              #
#   Stop & Start via PROJECT_ROOT:                                             #
#    $ docker-compose --file etc/docker-compose.yml down && mvn clean install  #
#      && docker-compose --file etc/docker-compose.yml up                      #
################################################################################


version: '3'


################################################################################
#                                                                              #
#                     Services                                                 #
#                                                                              #
################################################################################
services:

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      network:
        ipv4_address: 172.52.0.101

################################################################################

  dataflow:
    image: springcloud/spring-cloud-dataflow-server-local:1.5.0.RELEASE
    ports:
      - 9393:9393
      - 19002:19002
    environment:
      - spring.cloud.dataflow.applicationProperties.stream.spring.rabbitmq.host=rabbitmq
      - spring.cloud.config.enabled=false
#      - spring.datasource.url=jdbc:h2:file:/usr/share/dataflow/db
    volumes:
      - "${PWD}/etc/:/tmp/apps/"
      - "${PWD}/etc/dataflow:/usr/share/dataflow"
      - "${PWD}/csv-processor/target/csv-processor-0.0.1-SNAPSHOT.jar:/tmp/apps/processors/csv-processor-0.0.1-SNAPSHOT.jar"
      - "${PWD}/csv-file-filter/target/csv-file-filter-0.0.1-SNAPSHOT.jar:/tmp/apps/processors/csv-file-filter-0.0.1-SNAPSHOT.jar"
      - "${PWD}/db-sink/target/db-sink-0.0.1-SNAPSHOT.jar:/tmp/apps/sinks/db-sink-0.0.1-SNAPSHOT.jar"
      - "${PWD}/log-sink/target/log-sink-0.0.1-SNAPSHOT.jar:/tmp/apps/sinks/log-sink-0.0.1-SNAPSHOT.jar"
      - "D:/work/03_Projekte/01_Actual/SeaDataCloud/mqtt/apps/mqtt-source-rabbit/target/mqtt-source-rabbit-2.0.0.BUILD-SNAPSHOT.jar:/tmp/apps/sources/mqtt-source-rabbit-2.0.0.BUILD-SNAPSHOT.jar"
      - "D:/dev/git/sftp/apps/sftp-source-rabbit/target/ftp-source-rabbit-1.3.2.BUILD-SNAPSHOT.jar:/tmp/apps/sources/ftp-source-rabbit-1.3.2.BUILD-SNAPSHOT.jar"
      - "D:/dev/git/ftp/apps/ftp-source-rabbit/target/sftp-source-rabbit-1.3.2.BUILD-SNAPSHOTT.jar:/tmp/apps/sources/sftp-source-rabbit-1.3.2.BUILD-SNAPSHOT.jar"
    depends_on:
      - rabbitmq
    networks:
      network:
        ipv4_address: 172.52.0.102

################################################################################

  database:
    image: mdillon/postgis:9.5-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=sos
    volumes:
      - "${PWD}/etc/sos-init.sql:/docker-entrypoint-initdb.d/zz_sos_init.sql"
    networks:
      network:
        ipv4_address: 172.52.0.103

################################################################################

  sos:
    image: tomcat:9-jre8-alpine
    ports:
      - 8081:8080
      - 8000:8000
    volumes:
      - "D:/dev/git/SOS/webapp/target/52n-sos-webapp:/usr/local/tomcat/webapps/52n-sos-webapp"
      - "${PWD}/etc/sos/datasource.properties:/usr/local/tomcat/webapps/52n-sos-webapp/WEB-INF/datasource.properties"
      - "${PWD}/etc/sos/configuration.json:/usr/local/tomcat/webapps/52n-sos-webapp/configuration.json"
      - "${PWD}/etc/sos/settings.json:/usr/local/tomcat/webapps/52n-sos-webapp/static/client/helgoland/settings.json"
      - "${PWD}/etc/sos/application.properties:/usr/local/tomcat/webapps/52n-sos-webapp/WEB-INF/classes/application.properties"
      - "${PWD}/etc/sos/application-context.xml:/usr/local/tomcat/webapps/52n-sos-webapp/WEB-INF/spring/application-context.xml"
      - "${PWD}/etc/sos/tomcat-index.html:/usr/local/tomcat/webapps/ROOT/index.html"
    depends_on:
      - database
    environment:
      - JPDA_ADDRESS=8000
      - JPDA_TRANSPORT=dt_socket
      - JVM_OPTS=-Djava.awt.headless=true
    command: ["catalina.sh", "jpda", "run"]
    networks:
      network:
        ipv4_address: 172.52.0.104

################################################################################

  cnc:
    image: openjdk:8-jdk-alpine
    volumes:
      - "${PWD}/rest-controller/target/rest-controller-0.0.1-SNAPSHOT.jar:/tmp/service.jar"
      - "${PWD}/etc/cnc/pds.dat:/tmp/pds.dat"
    ports:
      - 8082:8082
      - 8001:8001
    command: [
      "java",
      "-Xdebug",
      "-Xrunjdwp:transport=dt_socket,server=y,address=8001,suspend=n",
      "-jar",
      "/tmp/service.jar",
      "--server.port=8082",
      "--server.servlet.contextPath=/cnc",
      "--org.n52.stream.sosendpoint=http://sos:8080/52n-sos-webapp/service",
      "--org.n52.stream.dataflowhost=http://dataflow:9393",
      "--org.n52.stream.baseurl=http://cnc:8082/cnc",
      "--org.n52.stream.datasource.url=jdbc:postgresql://database:5432/sos",
      "--org.n52.stream.datasource.username=postgres",
      "--org.n52.stream.datasource.password=postgres",
      "--security.user.name=cnc-user",
      "--security.user.password=cnc-non-secure-basic-auth-password"
    ]
    networks:
      network:
        ipv4_address: 172.52.0.105

################################################################################

  app-import:
    image: alpine:3.7
    depends_on:
      - dataflow
    command: >
      /bin/sh -c "
        while ! nc -z dataflow 9393;
        do
          sleep 1;
        done;
        #######################################################################
        #
        # FTP Source
        #
        # Doku: https://github.com/spring-cloud-stream-app-starters/ftp/tree/master/spring-cloud-starter-stream-source-ftp
        # Cmds to build:
        #   git clone https://github.com/spring-cloud-stream-app-starters/ftp.git &&\
        #   cd ftp && git checkout 1.3.x &&  ./mvnw clean install -PgenerateApps &&\
        #   cd apps/ftp-source-rabbit && ./mvnw clean package
        #
        wget -qO- 'http://dataflow:9393/apps/source/ftp-source' --post-data='uri=file:///tmp/apps/sources/ftp-source-rabbit-1.3.2.BUILD-SNAPSHOT.jar&force=true';
        echo 'FTP Source app imported'
        #######################################################################
        #
        # SFTP Source
        #
        # Doku: https://github.com/spring-cloud-stream-app-starters/sftp/tree/master/spring-cloud-starter-stream-source-sftp
        # Cmds to build:
        #   git clone https://github.com/spring-cloud-stream-app-starters/sftp.git &&\
        #   cd sftp && git checkout 1.3.x &&  ./mvnw clean install -PgenerateApps &&\
        #   cd apps/sftp-source-rabbit && ./mvnw clean package
        #
        wget -qO- 'http://dataflow:9393/apps/source/sftp-source' --post-data='uri=file:///tmp/apps/sources/sftp-source-rabbit-1.3.2.BUILD-SNAPSHOT.jar&force=true';
        echo 'SFTP Source app imported'
        ## https://github.com/spring-cloud-stream-app-starters/mqtt/tree/master/spring-cloud-starter-stream-source-mqtt
        wget -qO- 'http://dataflow:9393/apps/source/mqtt-source-rabbit' --post-data='uri=file:///tmp/apps/sources/mqtt-source-rabbit-2.0.0.BUILD-SNAPSHOT.jar&force=true';
        echo 'MQTT Source Rabbit app imported'
        wget -qO- 'http://dataflow:9393/apps/processor/csv-processor' --post-data='uri=file:///tmp/apps/processors/csv-processor-0.0.1-SNAPSHOT.jar&force=true';
        echo 'CsvProcessor app imported'
        wget -qO- 'http://dataflow:9393/apps/processor/csv-file-filter' --post-data='uri=file:///tmp/apps/processors/csv-file-filter-0.0.1-SNAPSHOT.jar&force=true';
        echo 'CsvFileFilter app imported'
        wget -qO- 'http://dataflow:9393/apps/processor/csv-timestamp-filter' --post-data='uri=file:///tmp/apps/processors/csv-timestamp-filter-0.0.1-SNAPSHOT.jar&force=true';
        echo 'CsvTimestampFilter app imported'
        wget -qO- 'http://dataflow:9393/apps/sink/db-sink' --post-data='uri=file:///tmp/apps/sinks/db-sink-0.0.1-SNAPSHOT.jar&force=true';
        echo 'DbSink app imported'
        wget -qO- 'http://dataflow:9393/apps/sink/log-sink' --post-data='uri=file:///tmp/apps/sinks/log-sink-0.0.1-SNAPSHOT.jar&force=true';
        echo 'LogSink app imported'"
    networks:
      network:
        ipv4_address: 172.52.0.106

################################################################################

  smle:
    image: nginx:alpine
    ports:
      - 8083:80
    depends_on:
      - cnc
    volumes:
      - "${PWD}/etc/smle:/usr/share/nginx/html"
      - "${PWD}/etc/smle_nginx.conf:/etc/nginx/conf.d/default.conf"
    networks:
      network:
        ipv4_address: 172.52.0.107

################################################################################

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.4
    environment:
      - ELASTIC_PASSWORD=changeme
    volumes:
      - "${PWD}/etc/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
      - "${PWD}/etc/elasticsearch/data:/usr/share/elasticsearch/data"
    ports:
      - 9300:9300
      - 9200:9200
    networks:
      network:
        ipv4_address: 172.52.0.108

################################################################################

  kibana :
    image: docker.elastic.co/kibana/kibana-oss:6.2.4
    volumes:
      - "${PWD}/etc/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml"
    ports:
      - 5601:5601
    networks:
      network:
        ipv4_address: 172.52.0.109
    depends_on:
      - elasticsearch

################################################################################

  logstash :
    image: docker.elastic.co/logstash/logstash-oss:6.2.4
    volumes:
      - "${PWD}/etc/logstash/config/logstash.yml/:/usr/share/logstash/config/logstash.yml"
      - "${PWD}/etc/logstash/pipeline:/usr/share/logstash/pipeline"
    ports:
      - 5000:5000
    networks:
      network:
        ipv4_address: 172.52.0.110
    depends_on:
      - elasticsearch

################################################################################
#                                                                              #
#                     Networks                                                 #
#                                                                              #
################################################################################
networks:
  network:
    driver: bridge
    ipam:
      config:
      - subnet: 172.52.0.0/24


################################################################################
#                                                                              #
#                     END OF FILE                                              #
#                                                                              #
################################################################################
